const ExcelJS = require("exceljs");
const { translate } = require("@vitalets/google-translate-api");

// –°–ª–æ–≤–∞—Ä—å –¥–ª—è —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤
const translationDictionary = {
  // –≠–º–æ–¥–∂–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  "üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ": "üîß Techniniai",
  "‚ö° –ú–æ–Ω—Ç–∞–∂": "‚ö° Montavimas",
  "üìä –†–∞—Å—á–µ—Ç—ã": "üìä Skaiƒçiavimai",
  "üí∞ –¶–µ–Ω–∞/–≠–∫–æ–Ω–æ–º–∏—è": "üí∞ Kaina/Taupymas",
  "üöö –î–æ—Å—Ç–∞–≤–∫–∞": "üöö Pristatymas",
  "üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã": "üìÑ Dokumentai",
  "üèóÔ∏è –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ": "üèóÔ∏è Taikymas",

  // –û–±—â–∏–µ —Ç–µ—Ä–º–∏–Ω—ã
  –æ–±—â–µ–µ: "bendras",
  –≤—Å–µ: "visi",
  "P6-20": "P6-20",
  "P6-30": "P6-30",
  S25: "S25",
  S6: "S6",
  SM6: "SM6",
  SP: "SP",
  P25: "P25",
  "VB-2": "VB-2",
  HAUS: "HAUS",

  // –ß–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞—é—â–∏–µ—Å—è —Ñ—Ä–∞–∑—ã
  "–±–ª–æ–∫–∏ HAUS": "HAUS blokai",
  —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ: "statyba",
  –º–æ–Ω—Ç–∞–∂: "montavimas",
  –±–µ—Ç–æ–Ω: "betonas",
  –∞—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ: "armavimas",
  —Ç–µ–ø–ª–æ–∏–∑–æ–ª—è—Ü–∏—è: "≈°ilumos izoliacija",
  –∑–≤—É–∫–æ–∏–∑–æ–ª—è—Ü–∏—è: "garso izoliacija",
  –ø—Ä–æ—á–Ω–æ—Å—Ç—å: "tvirtumas",
  –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å: "ilgaam≈æi≈°kumas",
};

async function translateWithDictionary(text) {
  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–æ–≤–∞—Ä—å
  if (translationDictionary[text]) {
    console.log(`üìö –ò–∑ —Å–ª–æ–≤–∞—Ä—è: "${text}" ‚Üí "${translationDictionary[text]}"`);
    return translationDictionary[text];
  }

  // –ï—Å–ª–∏ –Ω–µ—Ç –≤ —Å–ª–æ–≤–∞—Ä–µ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å API –ø–µ—Ä–µ–≤–æ–¥ –ø–æ–∑–∂–µ)
  console.log(`‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω –ø–µ—Ä–µ–≤–æ–¥ –¥–ª—è: "${text}"`);
  return text;
}

async function translateTextSafely(text, retryDelay = 5000) {
  if (!text || text.trim() === "") {
    return text;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–æ–≤–∞—Ä—å –ø–µ—Ä–≤—ã–º –¥–µ–ª–æ–º
  const dictTranslation = translationDictionary[text];
  if (dictTranslation) {
    console.log(`üìö –ò–∑ —Å–ª–æ–≤–∞—Ä—è: "${text}" ‚Üí "${dictTranslation}"`);
    return dictTranslation;
  }

  // –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –∫–æ—Ä–æ—Ç–∫–∏–π –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã/—Ü–∏—Ñ—Ä—ã, –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å
  if (text.length < 10 && /^[A-Za-z0-9\-\s]+$/.test(text)) {
    return text;
  }

  try {
    console.log(
      `üîÑ –ü–µ—Ä–µ–≤–æ–¥–∏–º: "${text.substring(0, 50)}${text.length > 50 ? "..." : ""}"`
    );
    await new Promise((resolve) => setTimeout(resolve, retryDelay));

    const result = await translate(text, { from: "ru", to: "lt" });
    console.log(
      `‚úÖ –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ: "${result.text.substring(0, 50)}${result.text.length > 50 ? "..." : ""}"`
    );
    return result.text;
  } catch (error) {
    if (error.message.includes("Too Many Requests")) {
      console.log(
        `‚è≥ –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: "${text.substring(0, 30)}..."`
      );
      return text; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
    }

    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞: ${error.message}`);
    return text; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ
  }
}

async function addLithuanianSheetImproved() {
  const inputFile = "HAUS_FAQ_Russian.xlsx";
  const outputFile = "HAUS_FAQ_Russian_with_Lithuanian_Improved.xlsx";

  try {
    console.log("üìñ –ß–∏—Ç–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π Excel —Ñ–∞–π–ª...");
    const workbook = new ExcelJS.Workbook();
    await workbook.xlsx.readFile(inputFile);

    const originalSheet = workbook.worksheets[0];
    console.log(`üìã –ò—Å—Ö–æ–¥–Ω—ã–π –ª–∏—Å—Ç: "${originalSheet.name}"`);

    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –ª–∏—Ç–æ–≤—Å–∫—É—é –≤–∫–ª–∞–¥–∫—É, –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    const existingLitSheet = workbook.worksheets.find((ws) =>
      ws.name.includes("Lietuvi≈≥")
    );
    if (existingLitSheet) {
      workbook.removeWorksheet(existingLitSheet.id);
      console.log("üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –ª–∏—Ç–æ–≤—Å–∫–∞—è –≤–∫–ª–∞–¥–∫–∞");
    }

    const lithuanianSheet = workbook.addWorksheet("FAQ –í–æ–∑—Ä–∞–∂–µ–Ω–∏—è (Lietuvi≈≥)");
    console.log("üìÑ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ª–∏—Å—Ç –¥–ª—è –ª–∏—Ç–æ–≤—Å–∫–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞");

    // –ü–µ—Ä–µ–≤–æ–¥—ã –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    const headerTranslations = {
      "‚Ññ": "‚Ññ",
      –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: "Prioritetas",
      –ö–∞—Ç–µ–≥–æ—Ä–∏—è: "Kategorija",
      –ü—Ä–æ–¥—É–∫—Ç: "Produktas",
      "–í–æ–∑—Ä–∞–∂–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞": "Kliento prie≈°taravimas",
      "–û—Ç—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è": "Prie≈°taravimo sprendimas",
      "–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞": "Rakta≈æod≈æiai",
      –Ø–∑—ã–∫: "Kalba",
    };

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    const headerRow = originalSheet.getRow(1);
    const newHeaderRow = lithuanianSheet.getRow(1);

    headerRow.eachCell((cell, colNumber) => {
      const originalValue = cell.value;
      const translatedValue =
        headerTranslations[originalValue] || originalValue;
      newHeaderRow.getCell(colNumber).value = translatedValue;
      newHeaderRow.getCell(colNumber).style = cell.style;
    });

    console.log("üìù –ó–∞–≥–æ–ª–æ–≤–∫–∏ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã");

    // –ö–æ–ø–∏—Ä—É–µ–º –∏ –ø–µ—Ä–µ–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ
    const totalRows = originalSheet.rowCount;
    console.log(`üìä –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥ ${totalRows - 1} —Å—Ç—Ä–æ–∫ –¥–∞–Ω–Ω—ã—Ö...`);

    let translatedCount = 0;
    let requestCount = 0;
    const maxRequests = 50; // –õ–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API

    for (let rowNum = 2; rowNum <= totalRows; rowNum++) {
      const originalRow = originalSheet.getRow(rowNum);
      const newRow = lithuanianSheet.getRow(rowNum);

      if (rowNum % 10 === 0) {
        console.log(
          `üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: ${rowNum - 1}/${totalRows - 1} —Å—Ç—Ä–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ`
        );
      }

      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é —è—á–µ–π–∫—É –≤ —Å—Ç—Ä–æ–∫–µ
      for (let colIndex = 1; colIndex <= originalRow.cellCount; colIndex++) {
        const originalCell = originalRow.getCell(colIndex);
        const newCell = newRow.getCell(colIndex);
        const cellValue = originalCell.value;

        if (cellValue === null || cellValue === undefined) {
          newCell.value = cellValue;
          continue;
        }

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∏–µ —Å—Ç–æ–ª–±—Ü—ã –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å
        const columnsToTranslate = [3, 5, 6, 7]; // –ö–∞—Ç–µ–≥–æ—Ä–∏—è, –í–æ–∑—Ä–∞–∂–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞, –û—Ç—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è, –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞

        if (
          columnsToTranslate.includes(colIndex) &&
          typeof cellValue === "string"
        ) {
          if (requestCount < maxRequests) {
            newCell.value = await translateWithDictionary(cellValue);
            if (!translationDictionary[cellValue]) {
              requestCount++;
            }
          } else {
            // –ï—Å–ª–∏ –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ª–æ–≤–∞—Ä—å –∏–ª–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª
            newCell.value = translationDictionary[cellValue] || cellValue;
          }
        } else if (colIndex === 8) {
          // –°—Ç–æ–ª–±–µ—Ü "–Ø–∑—ã–∫" - –º–µ–Ω—è–µ–º –Ω–∞ "lt"
          newCell.value = "lt";
        } else {
          // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤ –ø—Ä–æ—Å—Ç–æ –∫–æ–ø–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
          newCell.value = cellValue;
        }

        // –ö–æ–ø–∏—Ä—É–µ–º —Å—Ç–∏–ª—å —è—á–µ–π–∫–∏
        newCell.style = originalCell.style;
      }

      translatedCount++;
    }

    // –ö–æ–ø–∏—Ä—É–µ–º —à–∏—Ä–∏–Ω—É —Å—Ç–æ–ª–±—Ü–æ–≤
    originalSheet.columns.forEach((column, index) => {
      if (column.width) {
        lithuanianSheet.getColumn(index + 1).width = column.width;
      }
    });

    console.log(`‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${translatedCount} —Å—Ç—Ä–æ–∫ –¥–∞–Ω–Ω—ã—Ö`);
    console.log(
      `üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ ${requestCount} API –∑–∞–ø—Ä–æ—Å–æ–≤ –∏–∑ ${maxRequests} –¥–æ—Å—Ç—É–ø–Ω—ã—Ö`
    );

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    console.log("üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª...");
    await workbook.xlsx.writeFile(outputFile);

    console.log("üéâ –ì–æ—Ç–æ–≤–æ!");
    console.log(`üìÅ –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª: ${inputFile}`);
    console.log(`üìÅ –ù–æ–≤—ã–π —Ñ–∞–π–ª —Å –ª–∏—Ç–æ–≤—Å–∫–∏–º –ø–µ—Ä–µ–≤–æ–¥–æ–º: ${outputFile}`);
    console.log(`üìã –î–æ–±–∞–≤–ª–µ–Ω –ª–∏—Å—Ç: "${lithuanianSheet.name}"`);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–µ—Ä–µ–≤–æ–¥–æ–≤
    console.log("\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤:");
    console.log(
      `üî§ –ü–µ—Ä–µ–≤–æ–¥–æ–≤ –∏–∑ —Å–ª–æ–≤–∞—Ä—è: ${Object.keys(translationDictionary).length}`
    );
    console.log(`üåê API –∑–∞–ø—Ä–æ—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: ${requestCount}`);
  } catch (error) {
    console.error("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:", error);
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
console.log("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ª–∏—Ç–æ–≤—Å–∫–æ–π –≤–∫–ª–∞–¥–∫–∏ (—É–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)...");
addLithuanianSheetImproved()
  .then(() => {
    console.log("‚ú® –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!");
  })
  .catch((error) => {
    console.error("üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏:", error.message);
    process.exit(1);
  });
