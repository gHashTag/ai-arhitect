const ExcelJS = require("exceljs");

async function analyzeExcelFile() {
  try {
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç workbook
    const workbook = new ExcelJS.Workbook();

    // –ß–∏—Ç–∞–µ–º Excel —Ñ–∞–π–ª
    await workbook.xlsx.readFile("HAUS_FAQ_Russian.xlsx");

    console.log("üìä –ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞ HAUS_FAQ_Russian.xlsx");
    console.log("=====================================");

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ª–∏—Å—Ç—ã
    const worksheets = workbook.worksheets;
    console.log(`üìÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∏—Å—Ç–æ–≤: ${worksheets.length}`);

    worksheets.forEach((worksheet, index) => {
      console.log(`\nüìã –õ–∏—Å—Ç ${index + 1}: "${worksheet.name}"`);
      console.log(
        `   –†–∞–∑–º–µ—Ä: ${worksheet.rowCount} —Å—Ç—Ä–æ–∫ √ó ${worksheet.columnCount} —Å—Ç–æ–ª–±—Ü–æ–≤`
      );

      // –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ (–ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞)
      if (worksheet.rowCount > 0) {
        const headerRow = worksheet.getRow(1);
        const headers = [];
        headerRow.eachCell((cell, colNumber) => {
          headers.push(`–°—Ç–æ–ª–±–µ—Ü ${colNumber}: "${cell.value}"`);
        });
        console.log("   –ó–∞–≥–æ–ª–æ–≤–∫–∏:");
        headers.forEach((header) => console.log(`     - ${header}`));

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3-5 —Å—Ç—Ä–æ–∫ –¥–∞–Ω–Ω—ã—Ö
        console.log("   –ü–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö:");
        for (
          let rowNum = 2;
          rowNum <= Math.min(6, worksheet.rowCount);
          rowNum++
        ) {
          const row = worksheet.getRow(rowNum);
          const rowData = [];
          row.eachCell((cell, colNumber) => {
            if (colNumber <= 3) {
              // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3 —Å—Ç–æ–ª–±—Ü–∞ –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏
              rowData.push(`"${cell.value || ""}"`);
            }
          });
          if (rowData.length > 0) {
            console.log(`     –°—Ç—Ä–æ–∫–∞ ${rowNum}: ${rowData.join(" | ")}`);
          }
        }
      }
    });

    console.log("\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ñ–∞–π–ª–∞:", error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
analyzeExcelFile();
