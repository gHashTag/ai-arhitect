const ExcelJS = require("exceljs");
const { translate } = require("@vitalets/google-translate-api");

// –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–π —Ç–µ–º–∞—Ç–∏–∫–∏
const extendedTranslationDictionary = {
  // –ó–∞–≥–æ–ª–æ–≤–∫–∏ (—É–∂–µ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã, –Ω–æ –¥–ª—è –ø–æ–ª–Ω–æ—Ç—ã)
  –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: "Prioritetas",
  –ö–∞—Ç–µ–≥–æ—Ä–∏—è: "Kategorija",
  –ü—Ä–æ–¥—É–∫—Ç: "Produktas",
  "–í–æ–∑—Ä–∞–∂–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞": "Kliento prie≈°taravimas",
  "–û—Ç—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è": "Prie≈°taravimo sprendimas",
  "–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞": "Rakta≈æod≈æiai",
  –Ø–∑—ã–∫: "Kalba",

  // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  –æ–±—â–µ–µ: "bendrasis",
  –≤—Å–µ: "visi",

  // –ü—Ä–æ–¥—É–∫—Ç—ã HAUS
  "P6-20": "P6-20",
  "P6-30": "P6-30",
  S25: "S25",
  S6: "S6",
  SM6: "SM6",
  SP: "SP",
  P25: "P25",
  "VB-2": "VB-2",
  HAUS: "HAUS",

  // –°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã
  –±–ª–æ–∫–∏: "blokai",
  –±–ª–æ–∫: "blokas",
  –æ–ø–∞–ª—É–±–∫–∞: "klojinys",
  "–Ω–µ—Å—ä–µ–º–Ω–∞—è –æ–ø–∞–ª—É–±–∫–∞": "nenuimamas klojinys",
  —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç: "pamatas",
  –±–µ—Ç–æ–Ω: "betonas",
  –∞—Ä–º–∞—Ç—É—Ä–∞: "armat≈´ra",
  —Å—Ç–µ–Ω–∞: "siena",
  —Å—Ç–µ–Ω—ã: "sienos",
  –∫–∏—Ä–ø–∏—á: "plyta",
  —Ä–∞–∑–º–µ—Ä: "dydis",
  —Ä–∞–∑–º–µ—Ä—ã: "dyd≈æiai",
  –≤—ã—Å–æ—Ç–∞: "auk≈°tis",
  —à–∏—Ä–∏–Ω–∞: "plotis",
  –¥–ª–∏–Ω–∞: "ilgis",
  —Ç–æ–ª—â–∏–Ω–∞: "storis",
  –º–æ–Ω—Ç–∞–∂: "montavimas",
  —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ: "statyba",
  –¥–æ–º: "namas",
  –∑–¥–∞–Ω–∏–µ: "pastatas",
  –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: "konstrukcija",
  –∏–∑–æ–ª—è—Ü–∏—è: "izoliacija",
  —Ç–µ–ø–ª–æ–∏–∑–æ–ª—è—Ü–∏—è: "≈°ilumos izoliacija",
  –≥–∏–¥—Ä–æ–∏–∑–æ–ª—è—Ü–∏—è: "hidroizoliacija",

  // –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω—ã
  —Ü–µ–Ω–∞: "kaina",
  —Å—Ç–æ–∏–º–æ—Å—Ç—å: "kaina",
  –¥–æ—Ä–æ–≥–æ: "brangu",
  –¥–µ—à–µ–≤–æ: "pigu",
  —ç–∫–æ–Ω–æ–º–∏—è: "taupymas",
  –≤—ã–≥–æ–¥–∞: "nauda",
  –∑–∞—Ç—Ä–∞—Ç—ã: "i≈°laidos",
  —Ä–∞—Å—Ö–æ–¥—ã: "i≈°laidos",
  –ø–µ—Ä–µ–ø–ª–∞—Ç–∞: "permoka",

  // –ö–∞—á–µ—Å—Ç–≤–æ
  –∫–∞—á–µ—Å—Ç–≤–æ: "kokybƒó",
  –≥–∞—Ä–∞–Ω—Ç–∏—è: "garantija",
  —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: "sertifikatas",
  –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å: "patikimumas",
  –ø—Ä–æ—á–Ω–æ—Å—Ç—å: "stiprumas",
  –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å: "ilgaam≈æi≈°kumas",

  // –ß–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞—é—â–∏–µ—Å—è —Ñ—Ä–∞–∑—ã
  "–ß—Ç–æ —Ç–∞–∫–æ–µ": "Kas yra",
  "–ö–∞–∫ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å": "Kaip apskaiƒçiuoti",
  "–ù—É–∂–µ–Ω –ª–∏": "Ar reikia",
  "–í —á–µ–º —Ä–∞–∑–Ω–∏—Ü–∞": "Koks skirtumas",
  –°–∫–æ–ª—å–∫–æ: "Kiek",
  "–ú–æ–∂–Ω–æ –ª–∏": "Ar galima",
  –ì–¥–µ: "Kur",
  –ö–æ–≥–¥–∞: "Kada",
  –ü–æ—á–µ–º—É: "Kodƒól",
  "–ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ": "I≈° tikr≈≥j≈≥",
  "–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å": "Puikus klausimas",
  "–í—ã –ø—Ä–∞–≤—ã": "J≈´s teis≈´s",
  "–î–∞, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ": "Taip, b≈´tinai",
  "–ù–µ—Ç, –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ": "Ne, neb≈´tinai",

  // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
  "–º¬≤": "m¬≤",
  "–º¬≥": "m¬≥",
  —Å–º: "cm",
  –º–º: "mm",
  –∫–≥: "kg",
  —Ç–æ–Ω–Ω–∞: "tona",
  –ª–∏—Ç—Ä: "litras",

  // –ß–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
  –æ–¥–∏–Ω: "vienas",
  –¥–≤–∞: "du",
  —Ç—Ä–∏: "trys",
  –ø–µ—Ä–≤—ã–π: "pirmas",
  –≤—Ç–æ—Ä–æ–π: "antras",
  —Ç—Ä–µ—Ç–∏–π: "treƒçias",

  // –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  —Å–≤–µ—Ä—Ö—É: "i≈° vir≈°aus",
  —Å–Ω–∏–∑—É: "i≈° apaƒçios",
  —Å–ª–µ–≤–∞: "i≈° kairƒós",
  —Å–ø—Ä–∞–≤–∞: "i≈° de≈°inƒós",
  –≤–Ω—É—Ç—Ä–∏: "viduje",
  —Å–Ω–∞—Ä—É–∂–∏: "lauke",

  // –î–µ–π—Å—Ç–≤–∏—è
  —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: "sumontuoti",
  –ø–æ—Å—Ç—Ä–æ–∏—Ç—å: "pastatyti",
  —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å: "apskaiƒçiuoti",
  –∏–∑–º–µ—Ä–∏—Ç—å: "i≈°matuoti",
  –ø—Ä–æ–≤–µ—Ä–∏—Ç—å: "patikrinti",
  –∫—É–ø–∏—Ç—å: "pirkti",
  –∑–∞–∫–∞–∑–∞—Ç—å: "u≈æsakyti",
  –¥–æ—Å—Ç–∞–≤–∏—Ç—å: "pristatyti",
};

async function translateWithFallback(text, delay = 200) {
  if (!text || text.trim() === "") {
    return text;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–æ–≤–∞—Ä—å —Å–Ω–∞—á–∞–ª–∞
  if (extendedTranslationDictionary[text]) {
    console.log(
      `üìö –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ª–æ–≤–∞—Ä—å: "${text}" ‚Üí "${extendedTranslationDictionary[text]}"`
    );
    return extendedTranslationDictionary[text];
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Ç–µ–∫—Å—Ç –∫–∏—Ä–∏–ª–ª–∏—Ü—É
  if (!/[–∞-—è—ë]/i.test(text)) {
    // –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä—É—Å—Å–∫–∏—Ö –±—É–∫–≤, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
    return text;
  }

  // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è API
  await new Promise((resolve) => setTimeout(resolve, delay));

  try {
    console.log(
      `üîÑ API –ø–µ—Ä–µ–≤–æ–¥: "${text.substring(0, 50)}${text.length > 50 ? "..." : ""}"`
    );
    const result = await translate(text, { from: "ru", to: "lt" });
    console.log(
      `‚úÖ –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ: "${result.text.substring(0, 50)}${result.text.length > 50 ? "..." : ""}"`
    );
    return result.text;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ API: ${error.message}. –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–∞–∫ –µ—Å—Ç—å.`);

    // –ï—Å–ª–∏ API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ–ø—Ä–æ–±—É–µ–º –±–∞–∑–æ–≤—É—é –∑–∞–º–µ–Ω—É
    let result = text;
    for (const [ru, lt] of Object.entries(extendedTranslationDictionary)) {
      result = result.replace(new RegExp(ru, "gi"), lt);
    }

    return result;
  }
}

async function completeTranslation() {
  try {
    console.log("üöÄ –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ì–û –ü–ï–†–ï–í–û–î–ê –í–°–ï–ì–û –°–û–î–ï–†–ñ–ò–ú–û–ì–û");
    console.log("=============================================");

    // –ß–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª
    const workbook = new ExcelJS.Workbook();
    await workbook.xlsx.readFile(
      "HAUS_FAQ_Russian_with_Lithuanian_Improved.xlsx"
    );

    // –ù–∞—Ö–æ–¥–∏–º –ª–∏—Ç–æ–≤—Å–∫—É—é –≤–∫–ª–∞–¥–∫—É
    const lithuanianSheet = workbook.worksheets.find((ws) =>
      ws.name.includes("Lietuvi≈≥")
    );

    if (!lithuanianSheet) {
      console.log("‚ùå –õ–∏—Ç–æ–≤—Å–∫–∞—è –≤–∫–ª–∞–¥–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!");
      return;
    }

    console.log(`üìã –ü–µ—Ä–µ–≤–æ–¥–∏–º –ª–∏—Å—Ç: "${lithuanianSheet.name}"`);
    console.log(
      `üìè –†–∞–∑–º–µ—Ä: ${lithuanianSheet.rowCount} —Å—Ç—Ä–æ–∫ √ó ${lithuanianSheet.columnCount} —Å—Ç–æ–ª–±—Ü–æ–≤`
    );

    let translatedCells = 0;
    let totalCells = 0;
    let skippedCells = 0;

    // –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤—Å–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ, –∫—Ä–æ–º–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ (–ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É)
    for (let row = 2; row <= lithuanianSheet.rowCount; row++) {
      console.log(
        `\nüîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É ${row} –∏–∑ ${lithuanianSheet.rowCount}`
      );

      for (let col = 1; col <= lithuanianSheet.columnCount; col++) {
        const cell = lithuanianSheet.getCell(row, col);
        const originalValue = cell.value ? String(cell.value) : "";

        if (originalValue.length > 0) {
          totalCells++;

          // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏–ª–∏ —á–∏—Å–ª–∞
          if (!/[–∞-—è—ë]/i.test(originalValue)) {
            skippedCells++;
            continue;
          }

          // –ü–µ—Ä–µ–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç
          const translatedValue = await translateWithFallback(originalValue);

          if (translatedValue !== originalValue) {
            cell.value = translatedValue;
            translatedCells++;
            console.log(`   ‚úÖ –Ø—á–µ–π–∫–∞ [${row},${col}] –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–∞`);
          } else {
            console.log(`   ‚ö†Ô∏è –Ø—á–µ–π–∫–∞ [${row},${col}] –æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π`);
          }
        }
      }

      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Å—Ç—Ä–æ–∫–∞–º–∏
      if (row % 5 === 0) {
        console.log("‚è≥ –ü–∞—É–∑–∞ –º–µ–∂–¥—É –≥—Ä—É–ø–ø–∞–º–∏ —Å—Ç—Ä–æ–∫...");
        await new Promise((resolve) => setTimeout(resolve, 1000));
      }
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const outputFileName = "HAUS_FAQ_COMPLETE_LITHUANIAN.xlsx";
    await workbook.xlsx.writeFile(outputFileName);

    console.log("\nüéâ –ü–ï–†–ï–í–û–î –ó–ê–í–ï–†–®–ï–ù!");
    console.log("==================");
    console.log(`üìÅ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫: ${outputFileName}`);
    console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
    console.log(`   ‚Ä¢ –í—Å–µ–≥–æ —è—á–µ–µ–∫ —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º: ${totalCells}`);
    console.log(`   ‚Ä¢ –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ —è—á–µ–µ–∫: ${translatedCells}`);
    console.log(`   ‚Ä¢ –ü—Ä–æ–ø—É—â–µ–Ω–æ (—É–∂–µ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–æ): ${skippedCells}`);
    console.log(
      `   ‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –Ω–æ–≤—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤: ${((translatedCells / totalCells) * 100).toFixed(1)}%`
    );
  } catch (error) {
    console.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:", error.message);
    console.error(error.stack);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥
completeTranslation();
