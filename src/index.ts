import 'dotenv/config';
import { Telegraf, Markup } from 'telegraf';
import { openai } from './services/openai';
import { getAiFeedbackFromSupabase } from './services/getAiFeedbackFromOpenAI';

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const BOT_TOKEN = process.env.BOT_TOKEN;
const OPENAI_API_KEY = process.env.OPENAI_API_KEY;
const ASSISTANT_ID = process.env.OPENAI_ASSISTANT_ID;

if (!BOT_TOKEN) {
  throw new Error('BOT_TOKEN is required');
}

if (!OPENAI_API_KEY) {
  throw new Error('OPENAI_API_KEY is required');
}

if (!ASSISTANT_ID) {
  throw new Error('OPENAI_ASSISTANT_ID is required');
}

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
const bot = new Telegraf(BOT_TOKEN);

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Assistant –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
async function checkAssistantAvailability(): Promise<boolean> {
  try {
    const assistant = await openai.beta.assistants.retrieve(ASSISTANT_ID!);
    console.log(`‚úÖ Assistant available: ${assistant.name || 'Unnamed'}`);
    return true;
  } catch (error) {
    console.error(`‚ùå Assistant not available (ID: ${ASSISTANT_ID}):`, error);
    return false;
  }
}

// Middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
bot.use((ctx, next) => {
  console.log(`[${new Date().toISOString()}] Update:`, ctx.update);
  return next();
});

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start(async (ctx) => {
  const userName = ctx.from?.first_name || '–ö–æ–ª–ª–µ–≥–∞';
  const welcomeMessage = `üèóÔ∏è **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${userName}!**

–Ø **–ò–ò-–ê—Ä—Ö–∏—Ç–µ–∫—Ç** ‚Äî –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–º –±–ª–æ–∫–∞–º –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–º —Ä–µ—à–µ–Ω–∏—è–º.

ü§ñ **–ß—Ç–æ —è —É–º–µ—é:**
‚Ä¢ üìê –ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º
‚Ä¢ üßÆ –ü–æ–º–æ–≥–∞—Ç—å —Å —Ä–∞—Å—á–µ—Ç–∞–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
‚Ä¢ üìö –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–º –Ω–æ—Ä–º–∞–º
‚Ä¢ üí° –ü—Ä–µ–¥–ª–∞–≥–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è

üëá **–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:**`;

  const keyboard = Markup.inlineKeyboard([
    [Markup.button.callback('üß± –ö–∞—Ç–∞–ª–æ–≥ –±–ª–æ–∫–æ–≤', 'catalog')],
    [Markup.button.callback('üë®‚Äçüíº –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —ç–∫—Å–ø–µ—Ä—Ç–∞', 'consult')],
    [Markup.button.callback('‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã', 'faq')],
    [Markup.button.callback('üìö –°–ø—Ä–∞–≤–∫–∞', 'help')]
  ]);

  await ctx.reply(welcomeMessage, {
    parse_mode: 'Markdown',
    ...keyboard
  });
});

// –ö–æ–º–∞–Ω–¥–∞ /help
bot.help(async (ctx) => {
  const helpMessage = `
üìö **–°–ø—Ä–∞–≤–∫–∞ –ø–æ –ò–ò-–ê—Ä—Ö–∏—Ç–µ–∫—Ç**

ü§ñ **–û –±–æ—Ç–µ:**
–Ø —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ò–ò-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –¥–ª—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä–æ–≤ –∏ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤—â–∏–∫–æ–≤.

üí¨ **–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:**
–ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ:
‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞—Ö –±–ª–æ–∫–æ–≤
‚Ä¢ –í—ã–±–æ—Ä–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
‚Ä¢ –°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –Ω–æ—Ä–º–∞—Ö
‚Ä¢ –£–∑–ª–∞—Ö –ø—Ä–∏–º—ã–∫–∞–Ω–∏–π
‚Ä¢ –†–∞—Å—á–µ—Ç–µ –æ–±—ä–µ–º–æ–≤

üìã **–ö–æ–º–∞–Ω–¥—ã:**
/start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/blocks - –∫–∞—Ç–∞–ª–æ–≥ –±–ª–æ–∫–æ–≤
/consult - –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —ç–∫—Å–ø–µ—Ä—Ç–∞

üèóÔ∏è **–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:**
‚Ä¢ "–ö–∞–∫–∏–µ –±–ª–æ–∫–∏ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞?"
‚Ä¢ "–°–∫–æ–ª—å–∫–æ –±–µ—Ç–æ–Ω–∞ –Ω—É–∂–Ω–æ –¥–ª—è –±–ª–æ–∫–∞ P6-20?"
‚Ä¢ "–ö–∞–∫ –∞—Ä–º–∏—Ä–æ–≤–∞—Ç—å –±–ª–æ–∫ P6-20?"
  `;

  await ctx.reply(helpMessage, { parse_mode: 'Markdown' });
});

// –ö–æ–º–∞–Ω–¥–∞ /blocks
bot.command('blocks', async (ctx) => {
  const blocksMessage = `
üß± **–ö–∞—Ç–∞–ª–æ–≥ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –±–ª–æ–∫–æ–≤**

**HAUS P6-20** - –ë–ª–æ–∫–∏-–æ–ø–∞–ª—É–±–∫–∞ –∏–∑ –±–µ—Ç–æ–Ω–∞
üìê –†–∞–∑–º–µ—Ä—ã: 498√ó198√ó250 –º–º
üèóÔ∏è –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:
‚Ä¢ –õ–µ–Ω—Ç–æ—á–Ω—ã–µ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç—ã
‚Ä¢ –†–æ—Å—Ç–≤–µ—Ä–∫–∏
‚Ä¢ –ü–æ–¥–ø–æ—Ä–Ω—ã–µ —Å—Ç–µ–Ω—ã
‚Ä¢ –ü–µ—Ä–µ–º—ã—á–∫–∏

üíß –†–∞—Å—Ö–æ–¥ –±–µ—Ç–æ–Ω–∞: 0.015 –º¬≥ –Ω–∞ –±–ª–æ–∫

üìÑ –î–æ—Å—Ç—É–ø–Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
üìû –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏: +37064608801

–î–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç–æ —Å–ø—Ä–æ—Å–∏—Ç–µ –º–µ–Ω—è!
  `;

  await ctx.reply(blocksMessage, { parse_mode: 'Markdown' });
});

// –ö–æ–º–∞–Ω–¥–∞ /consult
bot.command('consult', async (ctx) => {
  const consultMessage = `
üë®‚Äçüíº **–≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è**

–ó–∞–¥–∞–π—Ç–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –±–ª–æ–∫–∞—Ö, –∏ —è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é –ø–æ–¥—Ä–æ–±–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å —É—á–µ—Ç–æ–º:

‚úÖ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
‚úÖ –°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –Ω–æ—Ä–º
‚úÖ –û–ø—ã—Ç–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π —ç–∫—Å–ø–µ—Ä—Ç–æ–≤

üí° **–ü—Ä–∏–º–µ—Ä:** "–ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –±–ª–æ–∫–∏ –¥–ª—è –ª–µ–Ω—Ç–æ—á–Ω–æ–≥–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞ –¥–æ–º–∞ 10√ó12 –º. –ö–∞–∫–∏–µ –±–ª–æ–∫–∏ –ø–æ—Å–æ–≤–µ—Ç—É–µ—Ç–µ –∏ —Å–∫–æ–ª—å–∫–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –±–µ—Ç–æ–Ω–∞?"
  `;

  await ctx.reply(consultMessage, { parse_mode: 'Markdown' });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∑–∞–ø—Ä–æ—Å–æ–≤ (inline –∫–Ω–æ–ø–∫–∏)
bot.on('callback_query', async (ctx) => {
  const callbackData = 'data' in ctx.callbackQuery ? ctx.callbackQuery.data : '';
  
  try {
    await ctx.answerCbQuery(); // –£–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    
    switch (callbackData) {
      case 'catalog':
        const catalogMessage = `üß± **–ö–∞—Ç–∞–ª–æ–≥ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –±–ª–æ–∫–æ–≤**

**HAUS P6-20** - –ë–ª–æ–∫–∏-–æ–ø–∞–ª—É–±–∫–∞ –∏–∑ –±–µ—Ç–æ–Ω–∞

üìè **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**
‚Ä¢ üìê –†–∞–∑–º–µ—Ä—ã: 498√ó198√ó250 –º–º
‚Ä¢ üíß –†–∞—Å—Ö–æ–¥ –±–µ—Ç–æ–Ω–∞: 0.015 –º¬≥/–±–ª–æ–∫
‚Ä¢ üì¶ –í –ø–∞–ª–ª–µ—Ç–µ: 50 —à—Ç (40M + 10K)

üèóÔ∏è **–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:**
‚Ä¢ –õ–µ–Ω—Ç–æ—á–Ω—ã–µ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç—ã
‚Ä¢ –†–æ—Å—Ç–≤–µ—Ä–∫–∏ –Ω–∞ —Å–≤–∞—è—Ö
‚Ä¢ –ü–æ–¥–ø–æ—Ä–Ω—ã–µ —Å—Ç–µ–Ω—ã
‚Ä¢ –ü–µ—Ä–µ–º—ã—á–∫–∏

üìû **–ö–æ–Ω—Ç–∞–∫—Ç—ã:** +37064608801
üåê **–°–∞–π—Ç:** www.vbg.lt`;
        
        const catalogKeyboard = Markup.inlineKeyboard([
          [Markup.button.callback('üìã –ü–æ–¥—Ä–æ–±–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã', 'calculations')],
          [Markup.button.callback('üì° –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', 'ask_question')],
          [Markup.button.callback('‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', 'back_to_menu')]
        ]);
        
        await ctx.editMessageText(catalogMessage, {
          parse_mode: 'Markdown',
          ...catalogKeyboard
        });
        break;
        
      case 'consult':
        const consultMessage = `üë®‚Äçüíº **–≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è**

–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ —è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é –ø–æ–¥—Ä–æ–±–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å —É—á–µ—Ç–æ–º:

‚úÖ **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫**
‚úÖ **–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –Ω–æ—Ä–º –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤**
‚úÖ **–û–ø—ã—Ç–∞ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è**
‚úÖ **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏**

üí° **–ü—Ä–∏–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞:**
‚Äú–ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –±–ª–æ–∫–∏ –¥–ª—è –ª–µ–Ω—Ç–æ—á–Ω–æ–≥–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞ –¥–æ–º–∞ 10√ó12 –º. –ö–∞–∫–∏–µ –±–ª–æ–∫–∏ –ø–æ—Å–æ–≤–µ—Ç—É–µ—Ç–µ –∏ —Å–∫–æ–ª—å–∫–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –±–µ—Ç–æ–Ω–∞?‚Äù`;
        
        const consultKeyboard = Markup.inlineKeyboard([
          [Markup.button.callback('‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', 'back_to_menu')]
        ]);
        
        await ctx.editMessageText(consultMessage, {
          parse_mode: 'Markdown',
          ...consultKeyboard
        });
        break;
        
      case 'faq':
        const faqMessage = `‚ùì **–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã**

üîπ **–ö–∞–∫–æ–µ –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –±–ª–æ–∫–æ–≤ HAUS P6-20?**
‚Üí –û–Ω–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∫–∞–∫ –Ω–µ—Å—ä–µ–º–Ω–∞—è –æ–ø–∞–ª—É–±–∫–∞ –¥–ª—è –º–æ–Ω–æ–ª–∏—Ç–Ω—ã—Ö –∂–µ–ª–µ–∑–æ–±–µ—Ç–æ–Ω–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π

üîπ **–ù—É–∂–Ω–æ –ª–∏ –∑–∞–ø–æ–ª–Ω—è—Ç—å –±–ª–æ–∫–∏ –±–µ—Ç–æ–Ω–æ–º?**
‚Üí –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ! –ë–ª–æ–∫–∏ –Ω–µ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–µ–∑ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–µ—Ç–æ–Ω–æ–º

üîπ **–ú–æ–∂–Ω–æ –ª–∏ –∞—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é?**
‚Üí –î–∞, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –∞—Ä–º–∞—Ç—É—Ä—É

üîπ **–ö–∞–∫ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª–æ–∫–æ–≤?**
‚Üí –ù–∞–ø–∏—à–∏—Ç–µ —Ä–∞–∑–º–µ—Ä—ã —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞, –∏ —è –ø–æ–º–æ–≥—É —Å —Ä–∞—Å—á–µ—Ç–æ–º!`;
        
        const faqKeyboard = Markup.inlineKeyboard([
          [Markup.button.callback('üìã –ü–æ–¥—Ä–æ–±–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã', 'calculations')],
          [Markup.button.callback('‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', 'back_to_menu')]
        ]);
        
        await ctx.editMessageText(faqMessage, {
          parse_mode: 'Markdown',
          ...faqKeyboard
        });
        break;
        
      case 'help':
        const helpMessage = `üìö **–°–ø—Ä–∞–≤–∫–∞ –ø–æ –ò–ò-–ê—Ä—Ö–∏—Ç–µ–∫—Ç**

ü§ñ **–û –±–æ—Ç–µ:**
–Ø —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ò–ò-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –¥–ª—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä–æ–≤ –∏ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤—â–∏–∫–æ–≤.

üí¨ **–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:**
‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã
‚Ä¢ –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –±–ª–æ–∫–∞—Ö
‚Ä¢ –£–∫–∞–∑—ã–≤–∞–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è —Ä–∞—Å—á–µ—Ç–æ–≤

üî® **–ö–æ–º–∞–Ω–¥—ã:**
/start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/blocks - –∫–∞—Ç–∞–ª–æ–≥ –±–ª–æ–∫–æ–≤
/consult - –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è

üí° **–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:**
‚Ä¢ ‚Äú–ö–∞–∫–∏–µ –±–ª–æ–∫–∏ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞?‚Äù
‚Ä¢ ‚Äú–°–∫–æ–ª—å–∫–æ –±–µ—Ç–æ–Ω–∞ –Ω—É–∂–Ω–æ –¥–ª—è –±–ª–æ–∫–∞ P6-20?‚Äù
‚Ä¢ ‚Äú–ö–∞–∫ –∞—Ä–º–∏—Ä–æ–≤–∞—Ç—å –±–ª–æ–∫ P6-20?‚Äù`;
        
        const helpKeyboard = Markup.inlineKeyboard([
          [Markup.button.callback('‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', 'back_to_menu')]
        ]);
        
        await ctx.editMessageText(helpMessage, {
          parse_mode: 'Markdown',
          ...helpKeyboard
        });
        break;
        
      case 'calculations':
        const calcMessage = `üìã **–ü–æ–¥—Ä–æ–±–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã**

üì¶ **–û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã HAUS P6-20:**

üìê **–†–∞–∑–º–µ—Ä—ã:**
‚Ä¢ P6-20 (M): 498√ó198√ó250 –º–º
‚Ä¢ P6-20 (K): 508√ó198√ó250 –º–º

üíß **–†–∞—Å—Ö–æ–¥ –±–µ—Ç–æ–Ω–∞:**
‚Ä¢ –ù–∞ 1 –±–ª–æ–∫: 0.015 –º¬≥
‚Ä¢ –ù–∞ 1 –º–ø –≤—ã—Å–æ—Ç–æ–π 25 —Å–º: 0.03 –º¬≥
‚Ä¢ –ù–∞ 1 –º¬≥ —Å—Ç–µ–Ω—ã: 0.6 –º¬≥

üì¶ **–ü–∞–ª–ª–µ—Ç–∞ (50 —à—Ç):**
‚Ä¢ 40 —à—Ç P6-20 (M)
‚Ä¢ 10 —à—Ç P6-20 (K)

üí° **–î–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ:**
‚Äú–†–∞—Å—Å—á–∏—Ç–∞–π –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª–æ–∫–æ–≤ –¥–ª—è [—É–∫–∞–∂–∏—Ç–µ —Ä–∞–∑–º–µ—Ä—ã]‚Äù`;
        
        const calcKeyboard = Markup.inlineKeyboard([
          [Markup.button.callback('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'back_to_menu')]
        ]);
        
        await ctx.editMessageText(calcMessage, {
          parse_mode: 'Markdown',
          ...calcKeyboard
        });
        break;
        
      case 'ask_question':
        await ctx.editMessageText('üì° **–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å**\n\n–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –±–ª–æ–∫–∞—Ö, –∏ —è –æ—Ç–≤–µ—á—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ!', {
          parse_mode: 'Markdown',
          ...Markup.inlineKeyboard([
            [Markup.button.callback('‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', 'back_to_menu')]
          ])
        });
        break;
        
      case 'back_to_menu':
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é
        const userName = ctx.from?.first_name || '–ö–æ–ª–ª–µ–≥–∞';
        const backMessage = `üèóÔ∏è **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${userName}!**

–Ø **–ò–ò-–ê—Ä—Ö–∏—Ç–µ–∫—Ç** ‚Äî –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–º –±–ª–æ–∫–∞–º –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–º —Ä–µ—à–µ–Ω–∏—è–º.

ü§ñ **–ß—Ç–æ —è —É–º–µ—é:**
‚Ä¢ üìê –ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º
‚Ä¢ üßÆ –ü–æ–º–æ–≥–∞—Ç—å —Å —Ä–∞—Å—á–µ—Ç–∞–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
‚Ä¢ üìö –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–º –Ω–æ—Ä–º–∞–º
‚Ä¢ üí° –ü—Ä–µ–¥–ª–∞–≥–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è

üëá **–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:**`;
        
        const mainKeyboard = Markup.inlineKeyboard([
          [Markup.button.callback('üß± –ö–∞—Ç–∞–ª–æ–≥ –±–ª–æ–∫–æ–≤', 'catalog')],
          [Markup.button.callback('üë®‚Äçüíº –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —ç–∫—Å–ø–µ—Ä—Ç–∞', 'consult')],
          [Markup.button.callback('‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã', 'faq')],
          [Markup.button.callback('üìö –°–ø—Ä–∞–≤–∫–∞', 'help')]
        ]);
        
        await ctx.editMessageText(backMessage, {
          parse_mode: 'Markdown',
          ...mainKeyboard
        });
        break;
        
      default:
        await ctx.answerCbQuery('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞');
    }
  } catch (error) {
    console.error('[Callback] Error:', error);
    await ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ OpenAI Assistant
bot.on('text', async (ctx) => {
  // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
  if (ctx.message.text.startsWith('/')) {
    return;
  }
  
  let progressMessage: any = null;
  
  try {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
    await ctx.sendChatAction('typing');

    const userMessage = ctx.message.text;
    const userName = ctx.from.first_name || '–ö–æ–ª–ª–µ–≥–∞';
    const userLanguage = ctx.from.language_code || 'ru';

    console.log(`[Assistant] Processing message from ${userName}: ${userMessage}`);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
    progressMessage = await ctx.reply('ü§ñ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à –≤–æ–ø—Ä–æ—Å...', {
      reply_parameters: { message_id: ctx.message.message_id }
    });

    // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç OpenAI Assistant
    const { ai_response } = await getAiFeedbackFromSupabase({
      assistant_id: ASSISTANT_ID!,
      report: userMessage,
      language_code: userLanguage,
      full_name: userName
    });

    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
    if (progressMessage) {
      try {
        await ctx.deleteMessage(progressMessage.message_id);
      } catch (e) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
      }
    }

    if (ai_response && ai_response.trim()) {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      await ctx.reply(ai_response, { 
        parse_mode: 'Markdown'
      });
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
      const followUpKeyboard = Markup.inlineKeyboard([
        [Markup.button.callback('‚ùì –ó–∞–¥–∞—Ç—å —É—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å', 'ask_question')],
        [Markup.button.callback('üìê –ö–∞—Ç–∞–ª–æ–≥ –±–ª–æ–∫–æ–≤', 'catalog'), Markup.button.callback('üèóÔ∏è –ú–µ–Ω—é', 'back_to_menu')]
      ]);
      
      await ctx.reply('üí° –ù–∞–¥–µ—é—Å—å, –º–æ–π –æ—Ç–≤–µ—Ç –±—ã–ª –ø–æ–ª–µ–∑–µ–Ω! –ß—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?', {
        ...followUpKeyboard
      });
      
    } else {
      await ctx.reply('ü§î –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —Å–º–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å.', {
        ...Markup.inlineKeyboard([
          [Markup.button.callback('üìö –ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å', 'help')],
          [Markup.button.callback('üèóÔ∏è –ú–µ–Ω—é', 'back_to_menu')]
        ])
      });
    }

  } catch (error) {
    console.error('[Assistant] Error processing message:', error);
    
    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    if (progressMessage) {
      try {
        await ctx.deleteMessage(progressMessage.message_id);
      } catch (e) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
      }
    }
    
    const errorMessage = `‚ùå **–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏**

üòî –ü—Ä–æ—à—É –ø—Ä–æ—â–µ–Ω–∏—è, –ø—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞.

üîÑ **–ß—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:**
‚Ä¢ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑
‚Ä¢ –ü–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ–Ω—é`;

    await ctx.reply(errorMessage, { 
      parse_mode: 'Markdown',
      ...Markup.inlineKeyboard([
        [Markup.button.callback('üìö –ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å', 'help')],
        [Markup.button.callback('üèóÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_menu')]
      ])
    });
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.catch((err, ctx) => {
  console.error('[Bot] Error occurred:', err);
});

// Graceful shutdown
process.on('SIGINT', () => {
  console.log('üõë Shutting down bot...');
  bot.stop('SIGINT');
  process.exit(0);
});

process.on('SIGTERM', () => {
  console.log('üõë Shutting down bot...');
  bot.stop('SIGTERM');
  process.exit(0);
});

// –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
async function setupBotCommands() {
  try {
    await bot.telegram.setMyCommands([
      { command: 'start', description: 'üèóÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ' },
      { command: 'help', description: 'üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞' },
      { command: 'blocks', description: 'üß± –ö–∞—Ç–∞–ª–æ–≥ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –±–ª–æ–∫–æ–≤ HAUS' },
      { command: 'consult', description: 'üë®‚Äçüíº –≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä–∞' }
    ]);
    console.log('‚úÖ Bot commands configured successfully');
  } catch (error) {
    console.error('‚ùå Error setting bot commands:', error);
  }
}

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π Assistant
console.log('üöÄ Starting AI Architect Bot...');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Assistant –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
checkAssistantAvailability()
  .then((isAvailable) => {
    if (!isAvailable) {
      console.warn('‚ö†Ô∏è  Warning: Assistant not available, but starting bot anyway');
    }
    
    return bot.launch();
  })
  .then(async () => {
    console.log('‚úÖ Bot is running!');
    console.log(`üì± Assistant ID: ${ASSISTANT_ID}`);
    console.log('üí¨ Ready to assist with construction blocks and architecture!');
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
    await setupBotCommands();
  })
  .catch((error) => {
    console.error('‚ùå Failed to start bot:', error);
    process.exit(1);
  });

export default bot;
