import { BotCommand } from 'telegraf/typings/core/types/typegram';
import { SupportedLanguage } from '../services/i18n';

// –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —è–∑—ã–∫–∞
const commandDescriptions: Record<SupportedLanguage, Record<string, string>> = {
  lt: {
    start: 'üèóÔ∏è Pagrindinis meniu ir pasisveikinimas',
    help: 'üìö Pagalba kaip naudotis botu',
    blocks: 'üß± HAUS statybini≈≥ blok≈≥ katalogas',
    consult: 'üë®‚Äçüíº Architekto eksperto konsultacija',
    language: 'üåê Kalbos pasirinkimas / Language / –Ø–∑—ã–∫'
  },
  ru: {
    start: 'üèóÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ',
    help: 'üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞',
    blocks: 'üß± –ö–∞—Ç–∞–ª–æ–≥ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –±–ª–æ–∫–æ–≤ HAUS',
    consult: 'üë®‚Äçüíº –≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä–∞',
    language: 'üåê –í—ã–±–æ—Ä —è–∑—ã–∫–∞ / Language / Kalba'
  },
  en: {
    start: 'üèóÔ∏è Main menu and welcome',
    help: 'üìö Bot usage help',
    blocks: 'üß± HAUS construction blocks catalog',
    consult: 'üë®‚Äçüíº Expert architect consultation',
    language: 'üåê Language selection / Kalba / –Ø–∑—ã–∫'
  }
};

// –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
const commandList = ['start', 'help', 'blocks', 'consult', 'language'] as const;
type CommandName = typeof commandList[number];

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞
 */
export function getBotCommands(language: SupportedLanguage): BotCommand[] {
  const descriptions = commandDescriptions[language];
  return commandList.map(command => ({
    command,
    description: descriptions[command]
  }));
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ
 */
export function getCommandDescription(command: CommandName, language: SupportedLanguage): string {
  return commandDescriptions[language][command];
}

/**
 * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —è–∑—ã–∫–∞
 */
export async function setupBotCommands(bot: any, language: SupportedLanguage = 'lt'): Promise<void> {
  try {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —è–∑—ã–∫–∞ —Å —è–∑—ã–∫–æ–≤—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º
    await bot.telegram.setMyCommands(
      getBotCommands(language),
      { language_code: language }
    );
    console.log(`‚úÖ Bot commands configured for language: ${language}`);
  } catch (error) {
    console.error(`‚ùå Error setting bot commands for ${language}:`, error);
    throw error;
  }
}
